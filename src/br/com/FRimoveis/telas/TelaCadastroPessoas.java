/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package br.com.FRimoveis.telas;

import br.com.FRimoveis.Conexao.ConexaoBD;
import br.com.FRimoveis.Desenvolvimento.CadastroPessoaTabela;
import br.com.FRimoveis.Desenvolvimento.CadastroPessoas;
import br.com.FRimoveis.dao.CadastroPessoasDB;
import java.awt.Toolkit;
import java.sql.SQLException;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.ListSelectionModel;
import javax.swing.text.DefaultFormatterFactory;
import javax.swing.text.MaskFormatter;

/**
 *
 * @author rodrigolima
 */
public class TelaCadastroPessoas extends javax.swing.JFrame {

    CadastroPessoas cadastroPessoas = new CadastroPessoas();
    CadastroPessoasDB cadastroPessoasDB = new CadastroPessoasDB();
    ConexaoBD conexao = new ConexaoBD();
    int update_sel = 0;

    /**
     * Creates new form TelaCadastroPessoas
     */
    public TelaCadastroPessoas() {
        setIcon();
        initComponents();
        rbPessoaFisica.setEnabled(false);
        rbPessoaJuridica.setEnabled(false);
        txtIDpessoa.setEnabled(false);
        cbPerfilPessoa.setEnabled(false);
        txtNomePessoa.setEnabled(false);
        txtNomeFantasia.setEnabled(false);
        txtcpfcnpj.setEnabled(false);
        txtInscricaoEstadual.setEnabled(false);
        txtDataNasc.setEnabled(false);
        txtEnderecoPessoa.setEnabled(false);
        txtBairroPessoa.setEnabled(false);
        txtNumeroCasaPessoa.setEnabled(false);
        txtCepPessoa.setEnabled(false);
        txtTelefonePessoa.setEnabled(false);
        txtEmailPessoa.setEnabled(false);
        txtReferencia1Nome.setEnabled(false);
        txtReferencia1Telefone.setEnabled(false);
        txtReferencia2Nome.setEnabled(false);
        txtReferencia2Telefone.setEnabled(false);
        btnSalvarPessoa.setEnabled(false);
        btnCancelarPessoa.setEnabled(false);
        btnExcluirPessoa.setEnabled(false);
        btnEditarPessoa.setEnabled(false);
        cbPerfilPessoa.removeAllItems();
        cbPerfilPessoa.addItem("");
        cbPerfilPessoa.addItem("LOCATARIO");
        cbPerfilPessoa.addItem("LOCADOR");

        MaskFormatter dataNasc = null;
        MaskFormatter cep = null;
        MaskFormatter fone = null;
        MaskFormatter foner1 = null;
        MaskFormatter foner2 = null;

        try {
            txtDataNasc.setValue(null);
            txtCepPessoa.setValue(null);
            txtTelefonePessoa.setValue(null);
            txtReferencia1Telefone.setValue(null);
            txtReferencia2Telefone.setValue(null);

            dataNasc = new MaskFormatter("##/##/####");
            dataNasc.setPlaceholderCharacter(' ');

            cep = new MaskFormatter("#####-###");
            cep.setPlaceholderCharacter(' ');

            fone = new MaskFormatter("(##)# ####-####");
            fone.setPlaceholderCharacter(' ');

            foner1 = new MaskFormatter("(##)# ####-####");
            foner1.setPlaceholderCharacter(' ');

            foner2 = new MaskFormatter("(##)# ####-####");
            foner2.setPlaceholderCharacter(' ');

            txtDataNasc.setFormatterFactory(new DefaultFormatterFactory(dataNasc));
            txtCepPessoa.setFormatterFactory(new DefaultFormatterFactory(cep));
            txtTelefonePessoa.setFormatterFactory(new DefaultFormatterFactory(fone));
            txtReferencia1Telefone.setFormatterFactory(new DefaultFormatterFactory(foner1));
            txtReferencia2Telefone.setFormatterFactory(new DefaultFormatterFactory(foner2));

        } catch (ParseException ex) {
        }

    }

    public void limparCampos() {
        txtIDpessoa.setText("");
        cbPerfilPessoa.setSelectedItem("");
        txtNomePessoa.setText("");
        txtNomeFantasia.setText("");
        txtcpfcnpj.setText("");
        txtInscricaoEstadual.setText("");
        txtDataNasc.setText("");
        txtEnderecoPessoa.setText("");
        txtBairroPessoa.setText("");
        txtNumeroCasaPessoa.setText("");
        txtCepPessoa.setText("");
        txtTelefonePessoa.setText("");
        txtEmailPessoa.setText("");
        txtReferencia1Nome.setText("");
        txtReferencia1Telefone.setText("");
        txtReferencia2Nome.setText("");
        txtReferencia2Telefone.setText("");
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        bgPerfilPessoas = new javax.swing.ButtonGroup();
        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        rbPessoaFisica = new javax.swing.JRadioButton();
        rbPessoaJuridica = new javax.swing.JRadioButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTPessoas = new javax.swing.JTable();
        jLabel3 = new javax.swing.JLabel();
        txtIDpessoa = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        txtNomePessoa = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        txtNomeFantasia = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        cbPerfilPessoa = new javax.swing.JComboBox<>();
        jLabel8 = new javax.swing.JLabel();
        txtcpfcnpj = new javax.swing.JFormattedTextField();
        jLabel9 = new javax.swing.JLabel();
        txtDataNasc = new javax.swing.JFormattedTextField();
        jLabel10 = new javax.swing.JLabel();
        txtInscricaoEstadual = new javax.swing.JFormattedTextField();
        jLabel11 = new javax.swing.JLabel();
        txtEnderecoPessoa = new javax.swing.JTextField();
        jLabel12 = new javax.swing.JLabel();
        txtBairroPessoa = new javax.swing.JTextField();
        jLabel13 = new javax.swing.JLabel();
        txtNumeroCasaPessoa = new javax.swing.JTextField();
        jLabel14 = new javax.swing.JLabel();
        txtCepPessoa = new javax.swing.JFormattedTextField();
        jLabel15 = new javax.swing.JLabel();
        txtTelefonePessoa = new javax.swing.JFormattedTextField();
        jLabel16 = new javax.swing.JLabel();
        txtEmailPessoa = new javax.swing.JTextField();
        jLabel17 = new javax.swing.JLabel();
        txtReferencia1Nome = new javax.swing.JTextField();
        jLabel18 = new javax.swing.JLabel();
        txtReferencia1Telefone = new javax.swing.JFormattedTextField();
        jLabel19 = new javax.swing.JLabel();
        txtReferencia2Nome = new javax.swing.JTextField();
        jLabel20 = new javax.swing.JLabel();
        txtReferencia2Telefone = new javax.swing.JFormattedTextField();
        btnPesquisarPessoa = new javax.swing.JButton();
        btnNovoPessoa = new javax.swing.JButton();
        btnSalvarPessoa = new javax.swing.JButton();
        btnCancelarPessoa = new javax.swing.JButton();
        btnExcluirPessoa = new javax.swing.JButton();
        btnEditarPessoa = new javax.swing.JButton();
        txtBuscarPessoa = new javax.swing.JTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("FR - Gerenciador de Imoveis - Cadastro de Pessoas");
        setPreferredSize(new java.awt.Dimension(1024, 720));
        setResizable(false);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowActivated(java.awt.event.WindowEvent evt) {
                formWindowActivated(evt);
            }
        });

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));

        jLabel1.setFont(new java.awt.Font("SansSerif", 2, 36)); // NOI18N
        jLabel1.setText("Cadastro de Pessoas");

        jLabel7.setIcon(new javax.swing.ImageIcon(getClass().getResource("/br/com/FRimoveis/icones/Capturar.JPG"))); // NOI18N

        jLabel2.setFont(new java.awt.Font("SansSerif", 1, 11)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(255, 0, 51));
        jLabel2.setText("* Campos Obrigatorios");

        bgPerfilPessoas.add(rbPessoaFisica);
        rbPessoaFisica.setFont(new java.awt.Font("SansSerif", 0, 20)); // NOI18N
        rbPessoaFisica.setText("Pessoa Fisica");
        rbPessoaFisica.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                rbPessoaFisicaMouseClicked(evt);
            }
        });
        rbPessoaFisica.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rbPessoaFisicaActionPerformed(evt);
            }
        });

        bgPerfilPessoas.add(rbPessoaJuridica);
        rbPessoaJuridica.setFont(new java.awt.Font("SansSerif", 0, 20)); // NOI18N
        rbPessoaJuridica.setText("Pessoa Juridica");
        rbPessoaJuridica.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                rbPessoaJuridicaMouseClicked(evt);
            }
        });

        jTPessoas.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {

            }
        ));
        jTPessoas.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTPessoasMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(jTPessoas);

        jLabel3.setFont(new java.awt.Font("SansSerif", 0, 20)); // NOI18N
        jLabel3.setText("ID Pessoa:");

        txtIDpessoa.setFont(new java.awt.Font("SansSerif", 0, 14)); // NOI18N
        txtIDpessoa.setHorizontalAlignment(javax.swing.JTextField.CENTER);

        jLabel4.setFont(new java.awt.Font("SansSerif", 0, 20)); // NOI18N
        jLabel4.setText("*Nome:");

        txtNomePessoa.setFont(new java.awt.Font("SansSerif", 0, 14)); // NOI18N

        jLabel5.setFont(new java.awt.Font("SansSerif", 0, 20)); // NOI18N
        jLabel5.setText("*Nome Fantasia:");

        txtNomeFantasia.setFont(new java.awt.Font("SansSerif", 0, 14)); // NOI18N

        jLabel6.setFont(new java.awt.Font("SansSerif", 0, 20)); // NOI18N
        jLabel6.setText("*Perfil:");

        cbPerfilPessoa.setFont(new java.awt.Font("SansSerif", 0, 14)); // NOI18N
        cbPerfilPessoa.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        cbPerfilPessoa.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));

        jLabel8.setFont(new java.awt.Font("SansSerif", 0, 20)); // NOI18N
        jLabel8.setText("*CPF/CNPJ:");

        txtcpfcnpj.setFont(new java.awt.Font("SansSerif", 0, 14)); // NOI18N

        jLabel9.setFont(new java.awt.Font("SansSerif", 0, 20)); // NOI18N
        jLabel9.setText("*Data Nascimento:");

        txtDataNasc.setFont(new java.awt.Font("SansSerif", 0, 14)); // NOI18N

        jLabel10.setFont(new java.awt.Font("SansSerif", 0, 20)); // NOI18N
        jLabel10.setText("*Inscrição Estadual:");

        txtInscricaoEstadual.setFont(new java.awt.Font("SansSerif", 0, 14)); // NOI18N

        jLabel11.setFont(new java.awt.Font("SansSerif", 0, 20)); // NOI18N
        jLabel11.setText("*Endereço:");

        txtEnderecoPessoa.setFont(new java.awt.Font("SansSerif", 0, 14)); // NOI18N
        txtEnderecoPessoa.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtEnderecoPessoaActionPerformed(evt);
            }
        });

        jLabel12.setFont(new java.awt.Font("SansSerif", 0, 20)); // NOI18N
        jLabel12.setText("*Bairro:");

        txtBairroPessoa.setFont(new java.awt.Font("SansSerif", 0, 14)); // NOI18N

        jLabel13.setFont(new java.awt.Font("SansSerif", 0, 20)); // NOI18N
        jLabel13.setText("*Numero:");

        txtNumeroCasaPessoa.setFont(new java.awt.Font("SansSerif", 0, 14)); // NOI18N
        txtNumeroCasaPessoa.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtNumeroCasaPessoaActionPerformed(evt);
            }
        });

        jLabel14.setFont(new java.awt.Font("SansSerif", 0, 20)); // NOI18N
        jLabel14.setText("*CEP:");

        txtCepPessoa.setFont(new java.awt.Font("SansSerif", 0, 14)); // NOI18N

        jLabel15.setFont(new java.awt.Font("SansSerif", 0, 20)); // NOI18N
        jLabel15.setText("*Telefone:");

        txtTelefonePessoa.setFont(new java.awt.Font("SansSerif", 0, 14)); // NOI18N

        jLabel16.setFont(new java.awt.Font("SansSerif", 0, 20)); // NOI18N
        jLabel16.setText("*E-mail:");

        txtEmailPessoa.setFont(new java.awt.Font("SansSerif", 0, 14)); // NOI18N
        txtEmailPessoa.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtEmailPessoaActionPerformed(evt);
            }
        });

        jLabel17.setFont(new java.awt.Font("SansSerif", 0, 20)); // NOI18N
        jLabel17.setText("*Nome Referência:");

        txtReferencia1Nome.setFont(new java.awt.Font("SansSerif", 0, 14)); // NOI18N

        jLabel18.setFont(new java.awt.Font("SansSerif", 0, 20)); // NOI18N
        jLabel18.setText("*Telefone Referência:");

        txtReferencia1Telefone.setFont(new java.awt.Font("SansSerif", 0, 14)); // NOI18N

        jLabel19.setFont(new java.awt.Font("SansSerif", 0, 20)); // NOI18N
        jLabel19.setText("*Nome Referência:");

        txtReferencia2Nome.setFont(new java.awt.Font("SansSerif", 0, 14)); // NOI18N

        jLabel20.setFont(new java.awt.Font("SansSerif", 0, 20)); // NOI18N
        jLabel20.setText("*Telefone Referência:");

        txtReferencia2Telefone.setFont(new java.awt.Font("SansSerif", 0, 14)); // NOI18N

        btnPesquisarPessoa.setBackground(new java.awt.Color(204, 204, 204));
        btnPesquisarPessoa.setFont(new java.awt.Font("SansSerif", 0, 11)); // NOI18N
        btnPesquisarPessoa.setText("Pesquisar");
        btnPesquisarPessoa.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnPesquisarPessoa.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnPesquisarPessoaActionPerformed(evt);
            }
        });

        btnNovoPessoa.setBackground(new java.awt.Color(204, 204, 204));
        btnNovoPessoa.setFont(new java.awt.Font("SansSerif", 0, 11)); // NOI18N
        btnNovoPessoa.setText("Novo");
        btnNovoPessoa.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnNovoPessoa.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnNovoPessoaActionPerformed(evt);
            }
        });

        btnSalvarPessoa.setBackground(new java.awt.Color(204, 204, 204));
        btnSalvarPessoa.setFont(new java.awt.Font("SansSerif", 0, 11)); // NOI18N
        btnSalvarPessoa.setText("Salvar");
        btnSalvarPessoa.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnSalvarPessoa.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSalvarPessoaActionPerformed(evt);
            }
        });

        btnCancelarPessoa.setBackground(new java.awt.Color(204, 204, 204));
        btnCancelarPessoa.setFont(new java.awt.Font("SansSerif", 0, 11)); // NOI18N
        btnCancelarPessoa.setText("Cancelar");
        btnCancelarPessoa.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnCancelarPessoa.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCancelarPessoaActionPerformed(evt);
            }
        });

        btnExcluirPessoa.setBackground(new java.awt.Color(204, 204, 204));
        btnExcluirPessoa.setFont(new java.awt.Font("SansSerif", 0, 11)); // NOI18N
        btnExcluirPessoa.setText("Excluir");
        btnExcluirPessoa.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnExcluirPessoa.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnExcluirPessoaActionPerformed(evt);
            }
        });

        btnEditarPessoa.setBackground(new java.awt.Color(204, 204, 204));
        btnEditarPessoa.setFont(new java.awt.Font("SansSerif", 0, 11)); // NOI18N
        btnEditarPessoa.setText("Editar");
        btnEditarPessoa.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnEditarPessoa.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEditarPessoaActionPerformed(evt);
            }
        });

        txtBuscarPessoa.setFont(new java.awt.Font("SansSerif", 0, 14)); // NOI18N
        txtBuscarPessoa.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        txtBuscarPessoa.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(204, 204, 204), 1, true));

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel1)
                            .addComponent(jLabel2)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(rbPessoaFisica)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(rbPessoaJuridica)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 205, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel4)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtNomePessoa, javax.swing.GroupLayout.PREFERRED_SIZE, 415, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jLabel5)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtNomeFantasia))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jLabel11, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(txtEnderecoPessoa, javax.swing.GroupLayout.PREFERRED_SIZE, 404, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jLabel8)
                                .addGap(8, 8, 8)
                                .addComponent(txtcpfcnpj)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jLabel10)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(txtInscricaoEstadual)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jLabel9)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(txtDataNasc, javax.swing.GroupLayout.PREFERRED_SIZE, 133, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jLabel12)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(txtBairroPessoa, javax.swing.GroupLayout.PREFERRED_SIZE, 210, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jLabel13)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(txtNumeroCasaPessoa, javax.swing.GroupLayout.DEFAULT_SIZE, 105, Short.MAX_VALUE))))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jLabel14)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(txtCepPessoa, javax.swing.GroupLayout.PREFERRED_SIZE, 141, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jLabel15)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(txtTelefonePessoa, javax.swing.GroupLayout.PREFERRED_SIZE, 176, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jLabel16))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jLabel3)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(txtIDpessoa, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jLabel6)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(cbPerfilPessoa, javax.swing.GroupLayout.PREFERRED_SIZE, 195, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtEmailPessoa))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel17)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtReferencia1Nome)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jLabel18)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtReferencia1Telefone, javax.swing.GroupLayout.PREFERRED_SIZE, 176, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel19)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtReferencia2Nome)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jLabel20)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtReferencia2Telefone, javax.swing.GroupLayout.PREFERRED_SIZE, 176, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(btnNovoPessoa, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnSalvarPessoa, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnCancelarPessoa, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(btnExcluirPessoa, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(btnEditarPessoa, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(txtBuscarPessoa, javax.swing.GroupLayout.DEFAULT_SIZE, 160, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnPesquisarPessoa, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jLabel7))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(24, 24, 24)
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 58, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel2)
                        .addGap(18, 18, Short.MAX_VALUE)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(rbPessoaFisica)
                            .addComponent(rbPessoaJuridica))))
                .addGap(11, 11, 11)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtIDpessoa, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(cbPerfilPessoa))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(txtNomePessoa)
                    .addComponent(txtNomeFantasia, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(txtDataNasc, javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel8, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel9, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(txtcpfcnpj, javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel10, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(txtInscricaoEstadual, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 29, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addComponent(jLabel11, javax.swing.GroupLayout.DEFAULT_SIZE, 29, Short.MAX_VALUE)
                        .addComponent(txtEnderecoPessoa, javax.swing.GroupLayout.DEFAULT_SIZE, 29, Short.MAX_VALUE))
                    .addComponent(jLabel12, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(txtBairroPessoa)
                            .addComponent(jLabel13, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel1Layout.createSequentialGroup()
                                .addComponent(txtNumeroCasaPessoa, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(0, 0, Short.MAX_VALUE)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addComponent(jLabel14, javax.swing.GroupLayout.DEFAULT_SIZE, 29, Short.MAX_VALUE)
                        .addComponent(txtCepPessoa)
                        .addComponent(jLabel15, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(txtTelefonePessoa)
                        .addComponent(jLabel16, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addComponent(txtEmailPessoa, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addComponent(jLabel17, javax.swing.GroupLayout.DEFAULT_SIZE, 29, Short.MAX_VALUE)
                        .addComponent(txtReferencia1Nome)
                        .addComponent(jLabel18, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addComponent(txtReferencia1Telefone, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addComponent(jLabel19, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(txtReferencia2Nome)
                        .addComponent(jLabel20, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(txtReferencia2Telefone, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnSalvarPessoa, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnCancelarPessoa, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnExcluirPessoa, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnEditarPessoa, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtBuscarPessoa, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnPesquisarPessoa, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnNovoPessoa, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 176, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        setSize(new java.awt.Dimension(1024, 720));
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void txtEnderecoPessoaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtEnderecoPessoaActionPerformed
    }//GEN-LAST:event_txtEnderecoPessoaActionPerformed

    private void txtNumeroCasaPessoaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtNumeroCasaPessoaActionPerformed
    }//GEN-LAST:event_txtNumeroCasaPessoaActionPerformed

    private void txtEmailPessoaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtEmailPessoaActionPerformed
    }//GEN-LAST:event_txtEmailPessoaActionPerformed

    private void btnPesquisarPessoaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnPesquisarPessoaActionPerformed
        limparCampos();
        if (txtBuscarPessoa.getText().isEmpty()) {
            String sql = cadastroPessoasDB.atualizarTabela();
            dadosTabela(sql);
        } else {
            cadastroPessoas.setPesquisaPessoa(txtBuscarPessoa.getText());
            CadastroPessoas model = cadastroPessoasDB.pesquisaUsuario(cadastroPessoas);
            try {
                String sql = cadastroPessoasDB.atualizarTabelaPesquisar(model);
                dadosTabela(sql);
            } catch (Exception e) {
            }
        }
    }//GEN-LAST:event_btnPesquisarPessoaActionPerformed

    private void btnNovoPessoaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnNovoPessoaActionPerformed
        update_sel = 1;
        rbPessoaFisica.setEnabled(true);
        rbPessoaJuridica.setEnabled(true);
        txtIDpessoa.setEnabled(false);
        cbPerfilPessoa.setEnabled(false);
        txtNomePessoa.setEnabled(false);
        txtNomeFantasia.setEnabled(false);
        txtcpfcnpj.setEnabled(false);
        txtInscricaoEstadual.setEnabled(false);
        txtDataNasc.setEnabled(false);
        txtEnderecoPessoa.setEnabled(false);
        txtBairroPessoa.setEnabled(false);
        txtNumeroCasaPessoa.setEnabled(false);
        txtCepPessoa.setEnabled(false);
        txtTelefonePessoa.setEnabled(false);
        txtEmailPessoa.setEnabled(false);
        txtReferencia1Nome.setEnabled(false);
        txtReferencia1Telefone.setEnabled(false);
        txtReferencia2Nome.setEnabled(false);
        txtReferencia2Telefone.setEnabled(false);
        btnSalvarPessoa.setEnabled(false);
        btnCancelarPessoa.setEnabled(true);
        btnExcluirPessoa.setEnabled(false);
        btnEditarPessoa.setEnabled(false);
    }//GEN-LAST:event_btnNovoPessoaActionPerformed

    private void btnSalvarPessoaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSalvarPessoaActionPerformed
        if (update_sel == 1) {
            if (rbPessoaFisica.isSelected()) {
                if ((cbPerfilPessoa.getSelectedItem().toString().isEmpty()) || (txtNomePessoa.getText().isEmpty()) || (txtcpfcnpj.getText().isEmpty())
                        || (txtDataNasc.getText().isEmpty()) || (txtEnderecoPessoa.getText().isEmpty()) || (txtBairroPessoa.getText().isEmpty()) || (txtNumeroCasaPessoa.getText().isEmpty())
                        || (txtCepPessoa.getText().isEmpty()) || (txtTelefonePessoa.getText().isEmpty()) || (txtEmailPessoa.getText().isEmpty()) || (txtReferencia1Nome.getText().isEmpty())
                        || (txtReferencia1Telefone.getText().isEmpty()) || (txtReferencia2Nome.getText().isEmpty()) || (txtReferencia2Telefone.getText().isEmpty())) {
                    JOptionPane.showMessageDialog(null, "Favor Preencher os campos Obrigatorios!");
                } else {
                    cadastroPessoas.setPerfil(cbPerfilPessoa.getSelectedItem().toString());
                    cadastroPessoas.setNomeCliente(txtNomePessoa.getText());
                    cadastroPessoas.setCnpjcpf(txtcpfcnpj.getText());

                    String dataNasc = txtDataNasc.getText();
                    SimpleDateFormat out = new SimpleDateFormat("yyyy-MM-dd");
                    SimpleDateFormat in = new SimpleDateFormat("dd/MM/yyyy");
                    try {
                        String result = out.format(in.parse(dataNasc));
                        cadastroPessoas.setDataNasc(result);
                    } catch (ParseException ex) {
                        Logger.getLogger(TelaCadastroPessoas.class.getName()).log(Level.SEVERE, null, ex);
                    }
                    cadastroPessoas.setEnderecoPessoa(txtEnderecoPessoa.getText());
                    cadastroPessoas.setBairroPessoa(txtBairroPessoa.getText());
                    cadastroPessoas.setNumeroCasa(txtNumeroCasaPessoa.getText());
                    cadastroPessoas.setCepPessoa(txtCepPessoa.getText());
                    cadastroPessoas.setTelefonePessoa(txtTelefonePessoa.getText());
                    cadastroPessoas.setEmailPessoa(txtEmailPessoa.getText());
                    cadastroPessoas.setReferencia01(txtReferencia1Nome.getText());
                    cadastroPessoas.setTelefonereferencia01(txtReferencia1Telefone.getText());
                    cadastroPessoas.setReferencia02(txtReferencia2Nome.getText());
                    cadastroPessoas.setTelefonereferencia02(txtReferencia2Telefone.getText());

                    cadastroPessoasDB.adicionaFisica(cadastroPessoas);
                    JOptionPane.showMessageDialog(null, "Cliente, " + txtNomePessoa.getText() + " inserido com sucesso! ");
                    limparCampos();

                    rbPessoaFisica.setEnabled(false);
                    rbPessoaJuridica.setEnabled(false);
                    txtIDpessoa.setEnabled(false);
                    cbPerfilPessoa.setEnabled(false);
                    txtNomePessoa.setEnabled(false);
                    txtNomeFantasia.setEnabled(false);
                    txtcpfcnpj.setEnabled(false);
                    txtInscricaoEstadual.setEnabled(false);
                    txtDataNasc.setEnabled(false);
                    txtEnderecoPessoa.setEnabled(false);
                    txtBairroPessoa.setEnabled(false);
                    txtNumeroCasaPessoa.setEnabled(false);
                    txtCepPessoa.setEnabled(false);
                    txtTelefonePessoa.setEnabled(false);
                    txtEmailPessoa.setEnabled(false);
                    txtReferencia1Nome.setEnabled(false);
                    txtReferencia1Telefone.setEnabled(false);
                    txtReferencia2Nome.setEnabled(false);
                    txtReferencia2Telefone.setEnabled(false);
                    btnSalvarPessoa.setEnabled(false);
                    btnCancelarPessoa.setEnabled(false);
                    btnExcluirPessoa.setEnabled(false);
                    btnEditarPessoa.setEnabled(false);
                }

            } else if (rbPessoaJuridica.isSelected()) {
                if ((cbPerfilPessoa.getSelectedItem().toString().isEmpty()) || (txtNomePessoa.getText().isEmpty()) || (txtcpfcnpj.getText().isEmpty())
                        || (txtDataNasc.getText().isEmpty()) || (txtEnderecoPessoa.getText().isEmpty()) || (txtBairroPessoa.getText().isEmpty()) || (txtNumeroCasaPessoa.getText().isEmpty())
                        || (txtCepPessoa.getText().isEmpty()) || (txtTelefonePessoa.getText().isEmpty()) || (txtEmailPessoa.getText().isEmpty()) || (txtReferencia1Nome.getText().isEmpty())
                        || (txtReferencia1Telefone.getText().isEmpty()) || (txtReferencia2Nome.getText().isEmpty()) || (txtReferencia2Telefone.getText().isEmpty()) || (txtNomeFantasia.getText().isEmpty())
                        || (txtInscricaoEstadual.getText().isEmpty())) {
                    JOptionPane.showMessageDialog(null, "Favor Preencher os campos Obrigatorios!");
                } else {
                    cadastroPessoas.setPerfil(cbPerfilPessoa.getSelectedItem().toString());
                    cadastroPessoas.setNomeCliente(txtNomePessoa.getText());
                    cadastroPessoas.setNomeFantasia(txtNomeFantasia.getText());
                    cadastroPessoas.setCnpjcpf(txtcpfcnpj.getText());
                    cadastroPessoas.setInscEstadual(txtInscricaoEstadual.getText());
                    
                    String dataNasc = txtDataNasc.getText();
                    SimpleDateFormat out = new SimpleDateFormat("yyyy-MM-dd");
                    SimpleDateFormat in = new SimpleDateFormat("dd/MM/yyyy");
                    try {
                        String result = out.format(in.parse(dataNasc));
                        cadastroPessoas.setDataNasc(result);
                    } catch (ParseException ex) {
                        Logger.getLogger(TelaCadastroPessoas.class.getName()).log(Level.SEVERE, null, ex);
                    }
                    cadastroPessoas.setEnderecoPessoa(txtEnderecoPessoa.getText());
                    cadastroPessoas.setBairroPessoa(txtBairroPessoa.getText());
                    cadastroPessoas.setNumeroCasa(txtNumeroCasaPessoa.getText());
                    cadastroPessoas.setCepPessoa(txtCepPessoa.getText());
                    cadastroPessoas.setTelefonePessoa(txtTelefonePessoa.getText());
                    cadastroPessoas.setEmailPessoa(txtEmailPessoa.getText());
                    cadastroPessoas.setReferencia01(txtReferencia1Nome.getText());
                    cadastroPessoas.setTelefonereferencia01(txtReferencia1Telefone.getText());
                    cadastroPessoas.setReferencia02(txtReferencia2Nome.getText());
                    cadastroPessoas.setTelefonereferencia02(txtReferencia2Telefone.getText());

                    cadastroPessoasDB.adicionaJuridica(cadastroPessoas);
                    JOptionPane.showMessageDialog(null, "Cliente, " + txtNomePessoa.getText() + " inserido com sucesso! ");

                    limparCampos();

                    rbPessoaFisica.setEnabled(false);
                    rbPessoaJuridica.setEnabled(false);
                    txtIDpessoa.setEnabled(false);
                    cbPerfilPessoa.setEnabled(false);
                    txtNomePessoa.setEnabled(false);
                    txtNomeFantasia.setEnabled(false);
                    txtcpfcnpj.setEnabled(false);
                    txtInscricaoEstadual.setEnabled(false);
                    txtDataNasc.setEnabled(false);
                    txtEnderecoPessoa.setEnabled(false);
                    txtBairroPessoa.setEnabled(false);
                    txtNumeroCasaPessoa.setEnabled(false);
                    txtCepPessoa.setEnabled(false);
                    txtTelefonePessoa.setEnabled(false);
                    txtReferencia1Nome.setEnabled(false);
                    txtEmailPessoa.setEnabled(false);
                    txtReferencia1Telefone.setEnabled(false);
                    txtReferencia2Nome.setEnabled(false);
                    txtReferencia2Telefone.setEnabled(false);
                    btnSalvarPessoa.setEnabled(false);
                    btnCancelarPessoa.setEnabled(false);
                    btnExcluirPessoa.setEnabled(false);
                    btnEditarPessoa.setEnabled(false);
                }
            }
        } else if (update_sel == 2) {
            if (txtNomeFantasia.getText().isEmpty() || txtInscricaoEstadual.getText().isEmpty()) {
                if ((cbPerfilPessoa.getSelectedItem().toString().isEmpty()) || (txtNomePessoa.getText().isEmpty()) || (txtcpfcnpj.getText().isEmpty())
                        || (txtDataNasc.getText().isEmpty()) || (txtEnderecoPessoa.getText().isEmpty()) || (txtBairroPessoa.getText().isEmpty()) || (txtNumeroCasaPessoa.getText().isEmpty())
                        || (txtCepPessoa.getText().isEmpty()) || (txtTelefonePessoa.getText().isEmpty()) || (txtEmailPessoa.getText().isEmpty()) || (txtReferencia1Nome.getText().isEmpty())
                        || (txtReferencia1Telefone.getText().isEmpty()) || (txtReferencia2Nome.getText().isEmpty()) || (txtReferencia2Telefone.getText().isEmpty())) {
                    JOptionPane.showMessageDialog(null, "Favor Preencher os campos Obrigatorios!");
                } else {
                    cadastroPessoas.setIdpessoa(txtIDpessoa.getText());
                    cadastroPessoas.setPerfil(cbPerfilPessoa.getSelectedItem().toString());
                    cadastroPessoas.setNomeCliente(txtNomePessoa.getText());
                    cadastroPessoas.setNomeFantasia(txtNomeFantasia.getText());
                    cadastroPessoas.setCnpjcpf(txtcpfcnpj.getText());
                    cadastroPessoas.setInscEstadual(txtInscricaoEstadual.getText());
                    
                    String dataNasc = txtDataNasc.getText();
                    SimpleDateFormat out = new SimpleDateFormat("yyyy-MM-dd");
                    SimpleDateFormat in = new SimpleDateFormat("dd/MM/yyyy");
                    try {
                        String result = out.format(in.parse(dataNasc));
                        cadastroPessoas.setDataNasc(result);
                    } catch (ParseException ex) {
                        Logger.getLogger(TelaCadastroPessoas.class.getName()).log(Level.SEVERE, null, ex);
                    }
                    cadastroPessoas.setEnderecoPessoa(txtEnderecoPessoa.getText());
                    cadastroPessoas.setBairroPessoa(txtBairroPessoa.getText());
                    cadastroPessoas.setNumeroCasa(txtNumeroCasaPessoa.getText());
                    cadastroPessoas.setCepPessoa(txtCepPessoa.getText());
                    cadastroPessoas.setTelefonePessoa(txtTelefonePessoa.getText());
                    cadastroPessoas.setEmailPessoa(txtEmailPessoa.getText());
                    cadastroPessoas.setReferencia01(txtReferencia1Nome.getText());
                    cadastroPessoas.setTelefonereferencia01(txtReferencia1Telefone.getText());
                    cadastroPessoas.setReferencia02(txtReferencia2Nome.getText());
                    cadastroPessoas.setTelefonereferencia02(txtReferencia2Telefone.getText());

                    cadastroPessoasDB.editarPessoas(cadastroPessoas);
                    JOptionPane.showMessageDialog(null, "Cliente, " + txtNomePessoa.getText() + " Atualizado com sucesso! ");

                    limparCampos();

                    rbPessoaFisica.setEnabled(false);
                    rbPessoaJuridica.setEnabled(false);
                    txtIDpessoa.setEnabled(false);
                    cbPerfilPessoa.setEnabled(false);
                    txtNomePessoa.setEnabled(false);
                    txtNomeFantasia.setEnabled(false);
                    txtcpfcnpj.setEnabled(false);
                    txtInscricaoEstadual.setEnabled(false);
                    txtDataNasc.setEnabled(false);
                    txtEnderecoPessoa.setEnabled(false);
                    txtBairroPessoa.setEnabled(false);
                    txtNumeroCasaPessoa.setEnabled(false);
                    txtCepPessoa.setEnabled(false);
                    txtTelefonePessoa.setEnabled(false);
                    txtEmailPessoa.setEnabled(false);
                    txtReferencia1Nome.setEnabled(false);
                    txtReferencia1Telefone.setEnabled(false);
                    txtReferencia2Nome.setEnabled(false);
                    txtReferencia2Telefone.setEnabled(false);
                    btnSalvarPessoa.setEnabled(false);
                    btnCancelarPessoa.setEnabled(false);
                    btnExcluirPessoa.setEnabled(false);
                    btnEditarPessoa.setEnabled(false);
                    btnNovoPessoa.setEnabled(true);
                }
            } else {
                if ((cbPerfilPessoa.getSelectedItem().toString().isEmpty()) || (txtNomePessoa.getText().isEmpty()) || (txtcpfcnpj.getText().isEmpty())
                        || (txtDataNasc.getText().isEmpty()) || (txtEnderecoPessoa.getText().isEmpty()) || (txtBairroPessoa.getText().isEmpty()) || (txtNumeroCasaPessoa.getText().isEmpty())
                        || (txtCepPessoa.getText().isEmpty()) || (txtTelefonePessoa.getText().isEmpty()) || (txtEmailPessoa.getText().isEmpty()) || (txtReferencia1Nome.getText().isEmpty())
                        || (txtReferencia1Telefone.getText().isEmpty()) || (txtReferencia2Nome.getText().isEmpty()) || (txtReferencia2Telefone.getText().isEmpty()) || (txtNomeFantasia.getText().isEmpty())
                        || (txtInscricaoEstadual.getText().isEmpty())) {
                    JOptionPane.showMessageDialog(null, "Favor Preencher os campos Obrigatorios!");
                } else {
                    cadastroPessoas.setIdpessoa(txtIDpessoa.getText());
                    cadastroPessoas.setPerfil(cbPerfilPessoa.getSelectedItem().toString());
                    cadastroPessoas.setNomeCliente(txtNomePessoa.getText());
                    cadastroPessoas.setNomeFantasia(txtNomeFantasia.getText());
                    cadastroPessoas.setCnpjcpf(txtcpfcnpj.getText());
                    cadastroPessoas.setInscEstadual(txtInscricaoEstadual.getText());
                    
                    String dataNasc = txtDataNasc.getText();
                    SimpleDateFormat out = new SimpleDateFormat("yyyy-MM-dd");
                    SimpleDateFormat in = new SimpleDateFormat("dd/MM/yyyy");
                    try {
                        String result = out.format(in.parse(dataNasc));
                        cadastroPessoas.setDataNasc(result);
                    } catch (ParseException ex) {
                        Logger.getLogger(TelaCadastroPessoas.class.getName()).log(Level.SEVERE, null, ex);
                    }
                    cadastroPessoas.setEnderecoPessoa(txtEnderecoPessoa.getText());
                    cadastroPessoas.setBairroPessoa(txtBairroPessoa.getText());
                    cadastroPessoas.setNumeroCasa(txtNumeroCasaPessoa.getText());
                    cadastroPessoas.setCepPessoa(txtCepPessoa.getText());
                    cadastroPessoas.setTelefonePessoa(txtTelefonePessoa.getText());
                    cadastroPessoas.setEmailPessoa(txtEmailPessoa.getText());
                    cadastroPessoas.setReferencia01(txtReferencia1Nome.getText());
                    cadastroPessoas.setTelefonereferencia01(txtReferencia1Telefone.getText());
                    cadastroPessoas.setReferencia02(txtReferencia2Nome.getText());
                    cadastroPessoas.setTelefonereferencia02(txtReferencia2Telefone.getText());

                    cadastroPessoasDB.editarPessoas(cadastroPessoas);
                    JOptionPane.showMessageDialog(null, "Cliente, " + txtNomePessoa.getText() + " Atualizado com sucesso! ");

                    limparCampos();

                    rbPessoaFisica.setEnabled(false);
                    rbPessoaJuridica.setEnabled(false);
                    txtIDpessoa.setEnabled(false);
                    cbPerfilPessoa.setEnabled(false);
                    txtNomePessoa.setEnabled(false);
                    txtNomeFantasia.setEnabled(false);
                    txtcpfcnpj.setEnabled(false);
                    txtInscricaoEstadual.setEnabled(false);
                    txtDataNasc.setEnabled(false);
                    txtEnderecoPessoa.setEnabled(false);
                    txtBairroPessoa.setEnabled(false);
                    txtNumeroCasaPessoa.setEnabled(false);
                    txtCepPessoa.setEnabled(false);
                    txtTelefonePessoa.setEnabled(false);
                    txtEmailPessoa.setEnabled(false);
                    txtReferencia1Nome.setEnabled(false);
                    txtReferencia1Telefone.setEnabled(false);
                    txtReferencia2Nome.setEnabled(false);
                    txtReferencia2Telefone.setEnabled(false);
                    btnSalvarPessoa.setEnabled(false);
                    btnCancelarPessoa.setEnabled(false);
                    btnExcluirPessoa.setEnabled(false);
                    btnEditarPessoa.setEnabled(false);
                    btnNovoPessoa.setEnabled(true);
                }
            }
        }
        String sql = cadastroPessoasDB.atualizarTabela();
        dadosTabela(sql);
    }//GEN-LAST:event_btnSalvarPessoaActionPerformed

    private void btnCancelarPessoaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCancelarPessoaActionPerformed
        limparCampos();

        rbPessoaFisica.setEnabled(false);
        rbPessoaJuridica.setEnabled(false);
        txtIDpessoa.setEnabled(false);
        cbPerfilPessoa.setEnabled(false);
        txtNomePessoa.setEnabled(false);
        txtNomeFantasia.setEnabled(false);
        txtcpfcnpj.setEnabled(false);
        txtInscricaoEstadual.setEnabled(false);
        txtDataNasc.setEnabled(false);
        txtEnderecoPessoa.setEnabled(false);
        txtBairroPessoa.setEnabled(false);
        txtNumeroCasaPessoa.setEnabled(false);
        txtCepPessoa.setEnabled(false);
        txtTelefonePessoa.setEnabled(false);
        txtEmailPessoa.setEnabled(false);
        txtReferencia1Nome.setEnabled(false);
        txtReferencia1Telefone.setEnabled(false);
        txtReferencia2Nome.setEnabled(false);
        txtReferencia2Telefone.setEnabled(false);
        btnSalvarPessoa.setEnabled(false);
        btnCancelarPessoa.setEnabled(false);
        btnExcluirPessoa.setEnabled(false);
        btnEditarPessoa.setEnabled(false);
        btnNovoPessoa.setEnabled(true);
    }//GEN-LAST:event_btnCancelarPessoaActionPerformed

    private void btnExcluirPessoaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnExcluirPessoaActionPerformed
        int res = 0;
        res = JOptionPane.showConfirmDialog(rootPane, "Deseja Remover o usuarios?");
        if (res == JOptionPane.YES_OPTION) {
            cadastroPessoas.setIdpessoa(txtIDpessoa.getText());
            cadastroPessoasDB.excluirPessoa(cadastroPessoas);

            limparCampos();

            rbPessoaFisica.setEnabled(false);
            rbPessoaJuridica.setEnabled(false);
            txtIDpessoa.setEnabled(false);
            cbPerfilPessoa.setEnabled(false);
            txtNomePessoa.setEnabled(false);
            txtNomeFantasia.setEnabled(false);
            txtcpfcnpj.setEnabled(false);
            txtInscricaoEstadual.setEnabled(false);
            txtDataNasc.setEnabled(false);
            txtEnderecoPessoa.setEnabled(false);
            txtBairroPessoa.setEnabled(false);
            txtNumeroCasaPessoa.setEnabled(false);
            txtCepPessoa.setEnabled(false);
            txtTelefonePessoa.setEnabled(false);
            txtEmailPessoa.setEnabled(false);
            txtReferencia1Nome.setEnabled(false);
            txtReferencia1Telefone.setEnabled(false);
            txtReferencia2Nome.setEnabled(false);
            txtReferencia2Telefone.setEnabled(false);
            btnSalvarPessoa.setEnabled(false);
            btnCancelarPessoa.setEnabled(false);
            btnExcluirPessoa.setEnabled(false);
            btnEditarPessoa.setEnabled(false);
        }
        String sql = cadastroPessoasDB.atualizarTabela();
        dadosTabela(sql);
    }//GEN-LAST:event_btnExcluirPessoaActionPerformed

    private void btnEditarPessoaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEditarPessoaActionPerformed
        update_sel = 2;
        btnExcluirPessoa.setEnabled(false);
        if (txtNomeFantasia.getText().isEmpty() || txtInscricaoEstadual.getText().isEmpty()) {
            jLabel5.setEnabled(false);
            jLabel10.setEnabled(false);
            txtIDpessoa.setEnabled(false);
            cbPerfilPessoa.setEnabled(true);
            txtNomePessoa.setEnabled(true);
            txtNomeFantasia.setEnabled(false);
            txtcpfcnpj.setEnabled(true);
            txtInscricaoEstadual.setEnabled(false);
            txtDataNasc.setEnabled(true);
            txtEnderecoPessoa.setEnabled(true);
            txtBairroPessoa.setEnabled(true);
            txtNumeroCasaPessoa.setEnabled(true);
            txtCepPessoa.setEnabled(true);
            txtTelefonePessoa.setEnabled(true);
            txtEmailPessoa.setEnabled(true);
            txtReferencia1Nome.setEnabled(true);
            txtReferencia1Telefone.setEnabled(true);
            txtReferencia2Nome.setEnabled(true);
            txtReferencia2Telefone.setEnabled(true);
            btnSalvarPessoa.setEnabled(true);
            update_sel = 2;
        } else {
            jLabel5.setEnabled(true);
            jLabel10.setEnabled(true);
            txtIDpessoa.setEnabled(false);
            cbPerfilPessoa.setEnabled(true);
            txtNomePessoa.setEnabled(true);
            txtNomeFantasia.setEnabled(true);
            txtcpfcnpj.setEnabled(true);
            txtInscricaoEstadual.setEnabled(true);
            txtDataNasc.setEnabled(true);
            txtEnderecoPessoa.setEnabled(true);
            txtBairroPessoa.setEnabled(true);
            txtNumeroCasaPessoa.setEnabled(true);
            txtCepPessoa.setEnabled(true);
            txtTelefonePessoa.setEnabled(true);
            txtEmailPessoa.setEnabled(true);
            txtReferencia1Nome.setEnabled(true);
            txtReferencia1Telefone.setEnabled(true);
            txtReferencia2Nome.setEnabled(true);
            txtReferencia2Telefone.setEnabled(true);
            btnSalvarPessoa.setEnabled(true);
            update_sel = 2;
        }
        String sql = cadastroPessoasDB.atualizarTabela();
        dadosTabela(sql);
    }//GEN-LAST:event_btnEditarPessoaActionPerformed

    private void rbPessoaFisicaMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_rbPessoaFisicaMouseClicked
        jLabel5.setEnabled(false);
        jLabel10.setEnabled(false);
        cbPerfilPessoa.setEnabled(true);
        txtNomePessoa.setEnabled(true);
        txtNomeFantasia.setEnabled(false);
        txtcpfcnpj.setEnabled(true);
        txtInscricaoEstadual.setEnabled(false);
        txtDataNasc.setEnabled(true);
        txtEnderecoPessoa.setEnabled(true);
        txtBairroPessoa.setEnabled(true);
        txtNumeroCasaPessoa.setEnabled(true);
        txtCepPessoa.setEnabled(true);
        txtTelefonePessoa.setEnabled(true);
        txtEmailPessoa.setEnabled(true);
        txtReferencia1Nome.setEnabled(true);
        txtReferencia1Telefone.setEnabled(true);
        txtReferencia2Nome.setEnabled(true);
        txtReferencia2Telefone.setEnabled(true);
        btnSalvarPessoa.setEnabled(true);
        btnCancelarPessoa.setEnabled(true);
        btnExcluirPessoa.setEnabled(false);
        btnEditarPessoa.setEnabled(false);
        btnNovoPessoa.setEnabled(false);
        String sql = cadastroPessoasDB.atualizarTabela();
        dadosTabela(sql);

        MaskFormatter cpf = null;
        try {
            txtcpfcnpj.setValue(null);
            cpf = new MaskFormatter("###.###.###-##");
            cpf.setPlaceholderCharacter(' ');
            txtcpfcnpj.setFormatterFactory(new DefaultFormatterFactory(cpf));
        } catch (ParseException ex) {
        }
        // TODO add your handling code here:
    }//GEN-LAST:event_rbPessoaFisicaMouseClicked

    private void rbPessoaJuridicaMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_rbPessoaJuridicaMouseClicked
        jLabel5.setEnabled(true);
        jLabel10.setEnabled(true);
        cbPerfilPessoa.setEnabled(true);
        txtNomePessoa.setEnabled(true);
        txtNomeFantasia.setEnabled(true);
        txtcpfcnpj.setEnabled(true);
        txtInscricaoEstadual.setEnabled(true);
        txtDataNasc.setEnabled(true);
        txtEnderecoPessoa.setEnabled(true);
        txtBairroPessoa.setEnabled(true);
        txtNumeroCasaPessoa.setEnabled(true);
        txtCepPessoa.setEnabled(true);
        txtTelefonePessoa.setEnabled(true);
        txtEmailPessoa.setEnabled(true);
        txtReferencia1Nome.setEnabled(true);
        txtReferencia1Telefone.setEnabled(true);
        txtReferencia2Nome.setEnabled(true);
        txtReferencia2Telefone.setEnabled(true);
        btnSalvarPessoa.setEnabled(true);
        btnCancelarPessoa.setEnabled(true);
        btnExcluirPessoa.setEnabled(false);
        btnEditarPessoa.setEnabled(false);
        btnNovoPessoa.setEnabled(false);
        String sql = cadastroPessoasDB.atualizarTabela();
        dadosTabela(sql);

        MaskFormatter cnpj = null;
        try {
            txtcpfcnpj.setValue(null);
            cnpj = new MaskFormatter("##.###.###/####-##");
            cnpj.setPlaceholderCharacter(' ');
            txtcpfcnpj.setFormatterFactory(new DefaultFormatterFactory(cnpj));
        } catch (ParseException ex) {
        }
    }//GEN-LAST:event_rbPessoaJuridicaMouseClicked

    private void rbPessoaFisicaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rbPessoaFisicaActionPerformed
    }//GEN-LAST:event_rbPessoaFisicaActionPerformed

    private void formWindowActivated(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowActivated
    }//GEN-LAST:event_formWindowActivated

    private void jTPessoasMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTPessoasMouseClicked
        String nome_pessoa = "" + jTPessoas.getValueAt(jTPessoas.getSelectedRow(), 0);
        cadastroPessoasDB.setClienteDados(nome_pessoa);

        cadastroPessoas = cadastroPessoasDB.getPessoas();

        txtIDpessoa.setText(cadastroPessoas.getIdpessoa());
        cbPerfilPessoa.setSelectedItem(cadastroPessoas.getPerfil());
        txtNomePessoa.setText(cadastroPessoas.getNomeCliente());
        txtNomeFantasia.setText(cadastroPessoas.getNomeFantasia());
        txtcpfcnpj.setText("");
        txtcpfcnpj.setText(cadastroPessoas.getCnpjcpf());
        txtInscricaoEstadual.setText(cadastroPessoas.getInscEstadual());
        txtDataNasc.setText(cadastroPessoas.getDataNasc());
        txtEnderecoPessoa.setText(cadastroPessoas.getEnderecoPessoa());
        txtBairroPessoa.setText(cadastroPessoas.getBairroPessoa());
        txtNumeroCasaPessoa.setText(cadastroPessoas.getNumeroCasa());
        txtCepPessoa.setText(cadastroPessoas.getCepPessoa());
        txtTelefonePessoa.setText(cadastroPessoas.getTelefonePessoa());
        txtEmailPessoa.setText(cadastroPessoas.getEmailPessoa());
        txtReferencia1Nome.setText(cadastroPessoas.getReferencia01());
        txtReferencia1Telefone.setText(cadastroPessoas.getTelefonereferencia01());
        txtReferencia2Nome.setText(cadastroPessoas.getReferencia02());
        txtReferencia2Telefone.setText(cadastroPessoas.getTelefonereferencia02());

        btnExcluirPessoa.setEnabled(true);
        btnEditarPessoa.setEnabled(true);

    }//GEN-LAST:event_jTPessoasMouseClicked

    public void dadosTabela(String sql) {
        ArrayList dados = new ArrayList();
        String[] colunas = new String[]{"ID", "Nome Cliente", "Nome Fantasia", "Endereço Cliente", "Perfil", "CNPJ / CPF", "Telefone"};
        conexao.conectar();
        conexao.executaSql(sql);
        try {
            conexao.rs.first();
            do {
                dados.add(new Object[]{conexao.rs.getString("idpessoa"), conexao.rs.getString("nomeCliente"), conexao.rs.getString("nomeFantasia"), conexao.rs.getString("enderecoPessoa"), conexao.rs.getString("perfil"), conexao.rs.getString("cnpjcpf"), conexao.rs.getString("telefonePessoa")});
            } while (conexao.rs.next());
        } catch (SQLException e) {
            JOptionPane.showMessageDialog(rootPane, "Erro ao preencher as tabelas! \n" + e.getMessage());
        }
        CadastroPessoaTabela tabela = new CadastroPessoaTabela(dados, colunas);

        jTPessoas.setModel(tabela);
        jTPessoas.getColumnModel().getColumn(0).setPreferredWidth(45);
        jTPessoas.getColumnModel().getColumn(0).setResizable(false);

        jTPessoas.getColumnModel().getColumn(1).setPreferredWidth(200);
        jTPessoas.getColumnModel().getColumn(1).setResizable(false);

        jTPessoas.getColumnModel().getColumn(2).setPreferredWidth(210);
        jTPessoas.getColumnModel().getColumn(2).setResizable(false);

        jTPessoas.getColumnModel().getColumn(3).setPreferredWidth(200);
        jTPessoas.getColumnModel().getColumn(3).setResizable(false);

        jTPessoas.getColumnModel().getColumn(4).setPreferredWidth(100);
        jTPessoas.getColumnModel().getColumn(4).setResizable(false);

        jTPessoas.getColumnModel().getColumn(5).setPreferredWidth(120);
        jTPessoas.getColumnModel().getColumn(5).setResizable(false);

        jTPessoas.getColumnModel().getColumn(6).setPreferredWidth(110);
        jTPessoas.getColumnModel().getColumn(6).setResizable(false);

        jTPessoas.getTableHeader().setReorderingAllowed(false);
        jTPessoas.setAutoResizeMode(jTPessoas.AUTO_RESIZE_OFF);
        jTPessoas.setSelectionMode(ListSelectionModel.SINGLE_SELECTION);

        conexao.desconectar();
    }

    public void setIcon() {
        setIconImage(Toolkit.getDefaultToolkit().getImage(getClass().getResource("/IconeSistema/IconeSistema.png")));
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(TelaCadastroPessoas.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(TelaCadastroPessoas.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(TelaCadastroPessoas.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(TelaCadastroPessoas.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new TelaCadastroPessoas().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.ButtonGroup bgPerfilPessoas;
    private javax.swing.JButton btnCancelarPessoa;
    private javax.swing.JButton btnEditarPessoa;
    private javax.swing.JButton btnExcluirPessoa;
    private javax.swing.JButton btnNovoPessoa;
    private javax.swing.JButton btnPesquisarPessoa;
    private javax.swing.JButton btnSalvarPessoa;
    private javax.swing.JComboBox<String> cbPerfilPessoa;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTPessoas;
    private javax.swing.JRadioButton rbPessoaFisica;
    private javax.swing.JRadioButton rbPessoaJuridica;
    private javax.swing.JTextField txtBairroPessoa;
    private javax.swing.JTextField txtBuscarPessoa;
    private javax.swing.JFormattedTextField txtCepPessoa;
    private javax.swing.JFormattedTextField txtDataNasc;
    private javax.swing.JTextField txtEmailPessoa;
    private javax.swing.JTextField txtEnderecoPessoa;
    private javax.swing.JTextField txtIDpessoa;
    private javax.swing.JFormattedTextField txtInscricaoEstadual;
    private javax.swing.JTextField txtNomeFantasia;
    private javax.swing.JTextField txtNomePessoa;
    private javax.swing.JTextField txtNumeroCasaPessoa;
    private javax.swing.JTextField txtReferencia1Nome;
    private javax.swing.JFormattedTextField txtReferencia1Telefone;
    private javax.swing.JTextField txtReferencia2Nome;
    private javax.swing.JFormattedTextField txtReferencia2Telefone;
    private javax.swing.JFormattedTextField txtTelefonePessoa;
    private javax.swing.JFormattedTextField txtcpfcnpj;
    // End of variables declaration//GEN-END:variables
}
